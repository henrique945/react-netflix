[{"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\index.tsx":"1","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\pages\\home\\home.tsx":"2","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\services\\tmdb.tsx":"3","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\movie-row\\movie-row.tsx":"4","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\featured-movie\\featured-movie.tsx":"5","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\header\\header.tsx":"6"},{"size":211,"mtime":1611845180276,"results":"7","hashOfConfig":"8"},{"size":2341,"mtime":1611959544057,"results":"9","hashOfConfig":"8"},{"size":2483,"mtime":1611876717441,"results":"10","hashOfConfig":"8"},{"size":1708,"mtime":1611962993432,"results":"11","hashOfConfig":"8"},{"size":1666,"mtime":1611880456166,"results":"12","hashOfConfig":"8"},{"size":671,"mtime":1611892609490,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1e8xif8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\index.tsx",[],["30","31"],"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\pages\\home\\home.tsx",[],"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\services\\tmdb.tsx",["32"],"import { HomeDataInterface } from '../interfaces/home-data.interface';\r\nimport { MovieDetailInterface } from '../interfaces/movie-detail.interface';\r\n\r\nconst API_KEY = 'b22d3c5aad3fdfadf82f70f1fa39d266';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/**\r\n * Originais de Netflix\r\n * Recomendados (trending)\r\n * Em alta (top rated)\r\n * Ação\r\n * Comédia\r\n * Terror\r\n * Romance\r\n * Documentários\r\n */\r\n\r\nconst basicFetch = async (endpoint: string) => {\r\n  const req = await fetch(`${ API_BASE }${ endpoint }&language=pt-BR&api_key=${ API_KEY }`);\r\n  return await req.json();\r\n};\r\n\r\nconst customFetch = async (endpoint: string) => {\r\n  const req = await fetch(`${ API_BASE }${ endpoint }?language=pt-BR&api_key=${ API_KEY }`);\r\n  return await req.json();\r\n};\r\n\r\nexport default {\r\n  getHomeList: async (): Promise<HomeDataInterface[]> => {\r\n    return [\r\n      {\r\n        slug: 'originals',\r\n        title: 'Originais do Netflix',\r\n        items: await basicFetch('/discover/tv?with_network=213'),\r\n      },\r\n      {\r\n        slug: 'trending',\r\n        title: 'Recomendados para Você',\r\n        items: await customFetch('/trending/all/week'),\r\n      },\r\n      {\r\n        slug: 'toprated',\r\n        title: 'Em alta',\r\n        items: await customFetch('/movie/top_rated'),\r\n      },\r\n      {\r\n        slug: 'action',\r\n        title: 'Ação',\r\n        items: await basicFetch('/discover/movie?with_genres=28'),\r\n      },\r\n      {\r\n        slug: 'comedy',\r\n        title: 'Comédio',\r\n        items: await basicFetch('/discover/movie?with_genres=35'),\r\n      },\r\n      {\r\n        slug: 'horror',\r\n        title: 'Terror',\r\n        items: await basicFetch('/discover/movie?with_genres=27'),\r\n      },\r\n      {\r\n        slug: 'romance',\r\n        title: 'Romance',\r\n        items: await basicFetch('/discover/movie?with_genres=10749'),\r\n      },\r\n      {\r\n        slug: 'documentary',\r\n        title: 'Documentários',\r\n        items: await basicFetch('/discover/movie?with_genres=99'),\r\n      },\r\n    ];\r\n  },\r\n  getMovieInfo: async (movieId: number, type: string): Promise<MovieDetailInterface | null> => {\r\n    let info: MovieDetailInterface | null = null;\r\n\r\n    if (!movieId)\r\n      return info;\r\n\r\n    switch (type) {\r\n      case 'movie':\r\n        info = await customFetch(`/movie/${ movieId }`);\r\n        break;\r\n\r\n      case 'tv':\r\n        info = await customFetch(`/tv/${ movieId }`);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return info;\r\n  },\r\n};\r\n","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\movie-row\\movie-row.tsx",["33"],"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\featured-movie\\featured-movie.tsx",["34"],"import React, { ReactElement } from 'react';\r\nimport './featured-movie.css';\r\nimport { FeaturedMovieInterface } from './featured-movie.interface';\r\n\r\nexport default ({ movie }: FeaturedMovieInterface): ReactElement => {\r\n\r\n  const firstDate = new Date(movie?.first_air_date || '');\r\n  const genres = [];\r\n  for (let i in movie?.genres) {\r\n    genres.push(movie?.genres[+i].name);\r\n  }\r\n\r\n  return (\r\n    <section className=\"featured\" style={ {\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/original/${ movie?.backdrop_path })`,\r\n    } }>\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">{ movie?.original_name }</div>\r\n          <div className=\"featured--info\">\r\n            <div className=\"featured--points\">{ movie?.vote_average } pontos</div>\r\n            <div className=\"featured--year\">{ firstDate.getFullYear() }</div>\r\n            <div className=\"featured--seasons\">{ movie?.number_of_seasons } temporada{ movie?.number_of_seasons !== 1 ? 's' : '' }</div>\r\n          </div>\r\n          <div className=\"featured--description\">{ movie?.overview }</div>\r\n          <div className=\"featured--buttons\">\r\n            <a href={`/watch/${movie?.id}`} className=\"featured--watch-button\">▶ Assistir</a>\r\n            <a href={`/watch/${movie?.id}`} className=\"featured--my-list-button\">+ Minha Lista</a>\r\n          </div>\r\n          <div className=\"featured--genres\">\r\n            <strong>Gêneros:</strong> { genres.join(', ') }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\header\\header.tsx",["35"],"import React, { ReactElement } from 'react';\r\nimport netflix from '../../assets/imgs/netflix.png';\r\nimport './header.css';\r\nimport { HeaderInterface } from './header.interface';\r\n\r\nexport default ({ black }: HeaderInterface): ReactElement => {\r\n  return (\r\n    <header className={ black ? 'black' : '' }>\r\n      <div className=\"header--logo\">\r\n        <a href=\"/\">\r\n          <img src={ netflix } alt=\"Netflix\"/>\r\n        </a>\r\n      </div>\r\n      <div className=\"header--user\">\r\n        <a href=\"/\">\r\n          <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário\"/>\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":28,"column":1,"nodeType":"42","endLine":94,"endColumn":3},{"ruleId":"40","severity":1,"message":"43","line":7,"column":1,"nodeType":"42","endLine":50,"endColumn":2},{"ruleId":"40","severity":1,"message":"43","line":5,"column":1,"nodeType":"42","endLine":39,"endColumn":2},{"ruleId":"40","severity":1,"message":"43","line":6,"column":1,"nodeType":"42","endLine":21,"endColumn":2},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]