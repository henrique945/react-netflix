[{"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\index.tsx":"1","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\pages\\home\\home.tsx":"2","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\services\\tmdb.tsx":"3","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\movie-row\\movie-row.tsx":"4","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\featured-movie\\featured-movie.tsx":"5"},{"size":211,"mtime":1611845180276,"results":"6","hashOfConfig":"7"},{"size":1629,"mtime":1611877770551,"results":"8","hashOfConfig":"7"},{"size":2483,"mtime":1611876717441,"results":"9","hashOfConfig":"7"},{"size":663,"mtime":1611852424821,"results":"10","hashOfConfig":"7"},{"size":1666,"mtime":1611880456166,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1e8xif8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\index.tsx",[],["25","26"],"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\pages\\home\\home.tsx",[],"X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\services\\tmdb.tsx",["27"],"import { HomeDataInterface } from '../interfaces/home-data.interface';\r\nimport { MovieDetailInterface } from '../interfaces/movie-detail.interface';\r\n\r\nconst API_KEY = 'b22d3c5aad3fdfadf82f70f1fa39d266';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/**\r\n * Originais de Netflix\r\n * Recomendados (trending)\r\n * Em alta (top rated)\r\n * Ação\r\n * Comédia\r\n * Terror\r\n * Romance\r\n * Documentários\r\n */\r\n\r\nconst basicFetch = async (endpoint: string) => {\r\n  const req = await fetch(`${ API_BASE }${ endpoint }&language=pt-BR&api_key=${ API_KEY }`);\r\n  return await req.json();\r\n};\r\n\r\nconst customFetch = async (endpoint: string) => {\r\n  const req = await fetch(`${ API_BASE }${ endpoint }?language=pt-BR&api_key=${ API_KEY }`);\r\n  return await req.json();\r\n};\r\n\r\nexport default {\r\n  getHomeList: async (): Promise<HomeDataInterface[]> => {\r\n    return [\r\n      {\r\n        slug: 'originals',\r\n        title: 'Originais do Netflix',\r\n        items: await basicFetch('/discover/tv?with_network=213'),\r\n      },\r\n      {\r\n        slug: 'trending',\r\n        title: 'Recomendados para Você',\r\n        items: await customFetch('/trending/all/week'),\r\n      },\r\n      {\r\n        slug: 'toprated',\r\n        title: 'Em alta',\r\n        items: await customFetch('/movie/top_rated'),\r\n      },\r\n      {\r\n        slug: 'action',\r\n        title: 'Ação',\r\n        items: await basicFetch('/discover/movie?with_genres=28'),\r\n      },\r\n      {\r\n        slug: 'comedy',\r\n        title: 'Comédio',\r\n        items: await basicFetch('/discover/movie?with_genres=35'),\r\n      },\r\n      {\r\n        slug: 'horror',\r\n        title: 'Terror',\r\n        items: await basicFetch('/discover/movie?with_genres=27'),\r\n      },\r\n      {\r\n        slug: 'romance',\r\n        title: 'Romance',\r\n        items: await basicFetch('/discover/movie?with_genres=10749'),\r\n      },\r\n      {\r\n        slug: 'documentary',\r\n        title: 'Documentários',\r\n        items: await basicFetch('/discover/movie?with_genres=99'),\r\n      },\r\n    ];\r\n  },\r\n  getMovieInfo: async (movieId: number, type: string): Promise<MovieDetailInterface | null> => {\r\n    let info: MovieDetailInterface | null = null;\r\n\r\n    if (!movieId)\r\n      return info;\r\n\r\n    switch (type) {\r\n      case 'movie':\r\n        info = await customFetch(`/movie/${ movieId }`);\r\n        break;\r\n\r\n      case 'tv':\r\n        info = await customFetch(`/tv/${ movieId }`);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return info;\r\n  },\r\n};\r\n","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\movie-row\\movie-row.tsx",["28"],"import React from 'react';\r\nimport './movie-row.css';\r\nimport { MovieRowInterface } from './movie-row.interface';\r\n\r\nexport default ({ title, items }: MovieRowInterface) => {\r\n  return (\r\n    <div className=\"movie-row\">\r\n      <h2>{ title }</h2>\r\n      <div className=\"movie-row--list-area\">\r\n        <div className=\"movie-row--list\">\r\n          { items.results.length > 0 && items.results.map((item, key) => (\r\n            <div key={key} className=\"movie-row--item\">\r\n              <img src={ `https://image.tmdb.org/t/p/w300${ item.poster_path }` } alt=\"Imagem do filme\"/>\r\n            </div>\r\n          )) }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","X:\\PERFIL DO USUARIO\\Documents\\React\\react-netflix\\src\\components\\featured-movie\\featured-movie.tsx",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":28,"column":1,"nodeType":"36","endLine":94,"endColumn":3},{"ruleId":"34","severity":1,"message":"37","line":5,"column":1,"nodeType":"36","endLine":20,"endColumn":2},{"ruleId":"34","severity":1,"message":"37","line":5,"column":1,"nodeType":"36","endLine":39,"endColumn":2},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]